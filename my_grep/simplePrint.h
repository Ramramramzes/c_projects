//* –¥–æ–±–∞–≤–ª—è–µ–º SIMPLE_PRINT –≤ –ø—Ä–µ–¥–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä üõ†Ô∏è
#ifndef SIMPLE_PRINT
#define SIMPLE_PRINT

#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <string.h>

#include "findWord.h"
#include "findStrSize.h"

void simplePrint(int argc,char *argv[]){
//* –î–æ–±–∞–≤–∏–º —Ñ—É–Ω—Ü–∏—é –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–∏—Å–∫–∞ —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ (–∏–¥–µ—Ç —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Ñ–ª–∞–≥–∞, –ø—Ä–µ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –±–µ–∑ '-')
  char* foundWord = findWord(argc,argv);
  bool coincidence = false;
  int needNum = 0;
  //* –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å –Ω–∞—à–µ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ NeedNum;
  for (int i = 1; i < argc; i++){
    for (int j = 0; j < (int)strlen(argv[i]); j++){
      if(foundWord[j] == argv[i][j] && argv[i][0] != '-'){
        coincidence = true;
      }else{
        coincidence = false;
      }
    }
    if(coincidence){
      needNum = i;
      break;
    }
  }

  printf("%d",findStrSize(argc,argv,needNum)); //! –ù–∞—Ö–æ–¥–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É —Å—Ç—Ä–æ–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±—É—Ñ–µ—Ä–∞

//! –ò—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫—É —Å—Ä–∞–≤–Ω–µ–Ω–∏—è *foundWord 
  // for (int i = needNum+1; i < argc; i++){
  //   FILE *file = fopen(argv[i], "r");

  //   char line[findStrSize(argc,argv,needNum)];  // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏
  //   while (fgets(line, sizeof(line), file) != NULL) {
  //       if (strstr(line, findWord) != NULL) {
  //           printf("%s", line);
  //       }
  //   }
  // }
  
  

  free(foundWord);
}

#endif