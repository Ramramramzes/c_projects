#ifndef PRINT_FILE_H
#define PRINT_FILE_H

#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <string.h>
#include "flagChecker.h"



int printFile(Flags flagsObj, int argc, char *argv[]){ 
  //* –ü—Ä–æ–ø—É—Å–∫–∞–µ–º ./a.out –∏ -—Ñ–ª–∞–≥–∏ –Ω–∞—á–∏–Ω–∞–µ–º —Å 2
  for(int i = 2; i < argc; i++){
    FILE *file = fopen(argv[i], "r");
    char ch;
    bool newRow = true;
    bool firstIter = true;
    int lineCount = 1;
//! –î–û–ë–ê–í–ò–¢–¨ –°–ê–ú–û–£–ù–ò–ß–¢–û–ñ–ê–Æ–©–ò–ï–°–Ø –§–õ–ê–ì–ò –¢–ò–ü–ê -b -n (—Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç -b —Ç–æ–ª—å–∫–æ) –ø—Ä–æ–≤–µ—Ä–∏—Ç—å üö®üö®üö®üö®üö®
    //* –ü–æ—à—Ç—É—á–Ω–æ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫–∞–∂–¥—ã–π —Å–∏–º–≤–æ–ª, –¥–æ–±–∞–≤–∏–º –ø—Ä–æ–≤–µ—Ä–∫—É –∫–∞–∂–¥–æ–≥–æ —Ñ–ª–∞–≥–∞ –≤ while
    while((ch = fgetc(file)) != EOF){
      //* –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–ª–∞–≥–æ–≤ üá∑üá∫
/*üö©*/if(flagsObj.b == 1){
        //* –¶–∏–∫–ª–∞–º–∏ –¥–æ–±–∞–≤–ª—è—é –ø—Ä–æ–±–µ–ª—ã –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ -b –≤ cat –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å –ø—Ä–æ–±–µ–ª–∞–º–∏ 
        if(firstIter && newRow){
          for (int k = 0; k < 5; k++){
            fputc(' ',stdout);
          }
          fprintf(stdout,"%d",lineCount);
          for (int k = 0; k < 2; k++){
            fputc(' ',stdout);
          }
          lineCount++;
        }else if(newRow){
          for (int k = 0; k < 5; k++){
            fputc(' ',stdout);
          }
          if(ch != '\n'){
            fprintf(stdout,"%d",lineCount);
            lineCount++;
          }
          for (int k = 0; k < 2; k++){
            fputc(' ',stdout);
          }
        }
        fputc(ch, stdout);
        newRow = (ch == '\n');
        firstIter = false;
      }
/*üö©*/if(flagsObj.e == 1 && ch == '\n'){
          fputc('$', stdout);
          fputc('\n', stdout);
      }else if(flagsObj.e == 1){
        fputc(ch, stdout);
      }

/*üö©*/if(flagsObj.n == 1){
        //* –¶–∏–∫–ª–∞–º–∏ –¥–æ–±–∞–≤–ª—è—é –ø—Ä–æ–±–µ–ª—ã –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ -b –≤ cat –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å –ø—Ä–æ–±–µ–ª–∞–º–∏ 
        if(firstIter && newRow){
          for (int k = 0; k < 5; k++){
            fputc(' ',stdout);
          }
          fprintf(stdout,"%d",lineCount);
          for (int k = 0; k < 2; k++){
            fputc(' ',stdout);
          }
          lineCount++;
        }else if(newRow){
          for (int k = 0; k < 5; k++){
            fputc(' ',stdout);
          }
          fprintf(stdout,"%d",lineCount);
          for (int k = 0; k < 2; k++){
            fputc(' ',stdout);
          }
          lineCount++;
        }else if(newRow && ch == '\n'){
          for (int k = 0; k < 8; k++){
            fputc(' ',stdout);
          }
        }
        
        fputc(ch, stdout);
        newRow = (ch == '\n');
        firstIter = false;
      }
    }
  }
  return 0;
}

#endif
